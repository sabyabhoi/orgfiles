:PROPERTIES:
:ID:       41686b78-6be7-459b-9242-28df33832faf
:ROAM_REFS: https://takeuforward.org/data-structure/next_permutation-find-next-lexicographically-greater-permutation/
:END:
#+title:Next Permutation
#+filetags: :CS:

In this problem, we're given an [[id:5adf9d6d-4832-420c-8c61-41d7747a47d1][array]] ~a[n]~, and we're supposed to find the next lexicographical permutation.

* Algorithm
1. Find the local maxima from the back. If it doesn't exist, then it means that the array is in decreasing order; In this case, just sort the array and return.
2. If the maxima is the i^th element, then we're going to swap the (i-1)^th element with the element after the local maxima which is just immediately greater than the i^th element.
3. Sort this sub-array starting from the i^th position till the end of the array

#+begin_src python
def next_perm(a: [int]):
    n = len(a)
    ix = -1
    for i in range(n - 1, 0, -1):
        if a[i] > a[i - 1]:
            ix = i
            break

   if ix == -1:
       a.sort()
       return a

   for i in range(n - 1, ix - 1, -1):
       if a[ix - 1] < a[i]:
           swap(a[ix - 1], a[i])
           break
   a[ix:].sort()
   return a
#+end_src
