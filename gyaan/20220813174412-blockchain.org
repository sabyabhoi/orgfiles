:PROPERTIES:
:ID:       94a4aacb-7799-4d2a-8185-f94150fa7ea2
:END:
#+title: Blockchain
#+filetags: :CS:

* Components of a block
A block on the blockchain consists of the following data:
- *Block ID*
- Number ONly used ONCe or *Nonce*: this is used for creating a valid block hash
- The actual transaction data:
  - Transaction amount
  - From address
  - To address
- hash of the previous block
- hash of the current block

Changing the value of any of the parameters given above alters the value of the
hash of the current block.
* Use of hashing
To verify that a person is authorizing a transaction on a blockchain, we make use
of hash verification: All the parties have a private and a public key. They sign
the transaction using the private key, which can be verified by anyone using their
public key.
** Generating account ID
In case of ethereum, the account ID is generated by taking the public address of
the party, applying the hashing algorithm used for hashing blocks, and selecting
the last 20 digits of the hash.
* Consensus
It is the mechanism used to agree to a particular state of the blockchain.
** Chain selection algorithm
It is used to select the legitimate blockchain. Bitcoin uses the *Nakamoto Consensus*,
which is a combination of /Proof of Work/ and the /Longest Chain Rule./
*** Block Confirmations
The number of confirmations is simply the number of additional blocks added on after
our transaction went onto the block. So if the number of confirmations is 2, that
means that 2 blocks have been added to the blockchain since our transaction went
through.
** Sybil resistance mechanism
This refers to the proof of work algorithm that bitcoin uses. It is the blockchain's
ability to defend against users to create large amount of pseudo-identities to
gain majority in the blockchain.
*** Proof of Work
- Here, the miner has to go through a series of steps of computationally demanding
  tasks in order to reach the consensus.
- One can vary the *block time* (i.e., the time to mine each block) by varying the
  complexity of the computational task.
- One of the major drawbacks of PoW is that it consumes massive amounts of electricity,
  and hence isn't the most environmentally friendly mechanism. To deal with this
  particular problem, /Proof of Stake/ was introduced.
*** Proof of Stake
- Here, the nodes put up some *stake* to guarantee that they won't misbehave in the
  chain. If some discrepancy is found, then the stake is used as a compensation
  payment for it.
- Here, instead of miners, a single /validator/ is randomly chosen to sign a new
  block and other validators then validate the whether the new block has any
  discrepancies or not (using hashing).
- Since the node is selected randomly, /randomness/ becomes an important aspect
  in such blockchains. In eth2, a DAO called RanDAO is used to select the
  validator node randomly.
* Deterministic Mechanism
- Since blockchains use a consensus mechanism to agree to a particular state, the exact same information should be present on all the different nodes. All the information is well-*determined* in the blockchain.
- An important implication/limitation of this is that implementing a =random= function becomes extremely difficult on blockchains, because each node would get a different random value upon calling the =random= function, which would violate the deterministic mechanism.
* Oracles and Chainlink
** Oracles
- Since we've observed that implementing random mechanism is almost impossible in a blockchain, we need to interact with some external sources of data to implement such mechanisms.
- These external sources are called *Oracles*.
- They are centralized systems which provide the blockchains with real-world data, like conversion rates between the cryptocurrencies and fiat currencies.
** Problem with Oracles
- Since oracles are centralized, if we have a single oracle supplying data to the blockchain, then that particular oracle could become the single source of failure for our blockchain, meaning that if the oracle fails, then the blockchain ceases functionality.
** [[https://chain.link/][Chainlink]]
(from the official website) Chainlink is a decentralized oracle network which provides tamper-proof inputs, outputs, and computation to support smart contracts on any blockchain.
* Scalability
If the demand for blockchain increases, the gas price would sky rocket, hence
putting an implicit financial constraint on the usabillity. This insinuates a
scalability problem for blockchains.
** Sharding
To combat the problem of scalability, eth2 is using a technique called *Sharding*,
which basically means creating blockchains inside blockchains. This increases the
number of blockchains and hence, the number of block space available for each
transaction.
** Layered applications
*** Layer 1 applications
Bitcoin, Ethereum etc. are all base level or layer 1 applications.
*** Layer 2 applications
Applications build on top of the base level application. For example, chainlink,
lightening protocol, etc.
