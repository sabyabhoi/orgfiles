:PROPERTIES:
:ID:       3e41be8e-cc72-444c-8508-01c086bb74eb
:END:
#+title: Size of Longest Consequtive Subsequence
#+filetags: :CS:

Given an array of integers nums, return the length of the longest consecutive subsequence (i.e., a subsequence in which the numbers are in consecutive order).

You must write an algorithm that runs in O(n) time.

* Algorithm
1. Use hashing
2. The key idea is to check whether the current element is the start element of a sequence, by checking whether (curr - 1)^th element exists in the hashset or not.

#+begin_src python
def sizeOfLongestConsecutive(self, nums: List[int]) -> int:
    s = set(nums)
    maxSize = 0
    for n in s:
        if n - 1 in s:
            continue
        size = 0
        while n in s:
            size += 1 
            n += 1
        maxSize = max(maxSize, size)
    return maxSize
#+end_src
