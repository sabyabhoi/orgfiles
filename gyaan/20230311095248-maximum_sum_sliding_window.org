:PROPERTIES:
:ID:       8ba3f638-ef0c-4c28-a68d-aeb52cd349dd
:END:
#+title: Maximum sum sliding window
#+filetags: :CS:

You are given an array ~a~ of ~n~ integers. There is a sliding window of size ~k~ which is moving from the very left of the array to the very right. You can only see the ~k~ numbers in the window. In every iteration, the sliding window moves right by one position. Print the maximum element in the sliding window in every iteration. The elements in the sliding window need not be unique.

* Solution
Use a deque.

#+begin_src python
  def max_subarray(arr, n, k):
      deque = []

      for i in range(k):
          while not deque.empty() and arr[i] >= arr[deque[-1]]:
              deque.pop_back()
          deque.push_back(i)

      for i in range(k, n):
          print(arr[deque[0]], end=' ')

          while not deque.empty() and deque[0] <= i - k:
              deque.pop_front()
        
          while not deque.empty() and arr[i] >= arr[deque[-1]]:
              deque.pop_back()

          deque.push_back(i)

      print(arr[deque[0]])
#+end_src
