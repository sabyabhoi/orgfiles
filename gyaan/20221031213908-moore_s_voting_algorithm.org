:PROPERTIES:
:ID:       2bd07e19-24d4-4dc0-b5b5-9b49d4fd8910
:ROAM_REFS: https://leetcode.com/problems/majority-element/
:END:
#+title:Moore's Voting Algorithm
#+filetags: :CONCEPT:CS:

It is an [[id:a9338446-247d-4883-912e-bd4d705efd39][algorithm]] used for finding the majority element in an [[id:5adf9d6d-4832-420c-8c61-41d7747a47d1][array]] =a[n]=. Here, an element is in majority if its frequency is greater than =n/2=.

* Algorithm
#+begin_src python
  count = 0
  ans = 0
  for i in a:
      if count == 0:
          ans = i
      if ans == i:
          count += 1
      else count -= 1
#+end_src

** Intuition
- Frequency of majority element = =n/2 + x= for some =x > 0=.
- Frequency of rest of the elements combined = =n/2 - x=
- \therefore If we keep track of the difference in the frequency of the majority element and the rest of the elements, there's always going to be a positive count.
