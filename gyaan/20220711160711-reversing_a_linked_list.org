:PROPERTIES:
:ID:       1bc40ef5-2d0c-4e26-b421-90483aa64d32
:END:
#+title: Reversing a Linked List
#+filetags: :CS:

- See [[id:58e01dcb-3b38-41dc-852d-777a5ec4cd2a][Linked Lists]].

* Iterative Approach
:PROPERTIES:
:ID:       77a36ed7-c499-4f8f-b0b5-8618b85ca1f4
:END:

#+begin_src C++ :includes <bits/stdc++.h> :main no :namespaces std 
  Node* reverse(Node* head) {
    Node *prev = nullptr, *curr = head, *next;

    while(curr != nullptr) {
      next = curr->next;
      curr->next = prev;
      prev = curr;
      curr = next;
    }
    return prev;
  }
#+end_src

* Recursive Approach
#+begin_src c++
  Node* reverse(Node *head) {
    if (head == nullptr || head->next == nullptr) {
      return head;
    }
    Node *newHead = reverse(head->next);
    Node *next = head->next;
    next->next = head;
    head->next = nullptr;
    return newHead;
  }
#+end_src
